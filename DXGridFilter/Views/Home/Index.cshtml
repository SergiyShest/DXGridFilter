<style>
    table.filter {
        border: 1pt solid black;
        border-collapse: collapse;
        background-color: #ccc;
    }
    tr.border_bottom td {
        border-bottom:1pt solid black;
    }
    .labelBase {
        margin: 2px;
    }
    .greyBackground {
        background-color: #eee; /* Цвет фона для неактивного котнрола */
    }
    .inputBase {
        margin: 2px;
        min-width: 170px;
       
    }
</style>
<script src="@Url.Content("../Content/FilterItem.js")" type="text/javascript"></script>
<script src="@Url.Content("../Content/FilterControls.js")" type="text/javascript"></script>
<script src="@Url.Content("../Content/FilterHelper.js")" type="text/javascript"></script>
<script src="@Url.Content("../Content/DateFormat.js")" type="text/javascript"></script>
<script type="text/javascript">

    function OnContextMenuItemClick(s, e) {
        if (e.objectType == "header" && e.item.name == 'Copy') {
            e.handled = true;
            var isKeyFieldRequired = false;

            var fieldName = s.GetColumn(e.elementIndex).fieldName;
            if (fieldName == 'OrderID') {
                isKeyFieldRequired = true;
            }
            s.GetSelectedFieldValues('OrderID', GetSelectedFieldValuesCallback);


            function fetchJson(path, collback) {
                try {
                    fetch(path, { mode: 'cors' })
                        .then(response => response.json())
                        .then(function (json) {
                            collback(json);
                        }
                        );
                } catch (ex) {
                    alert(ex);
                }
            }

            function GetSelectedFieldValuesCallback(values) {
                var res = '';
                for (var i = 0; i < values.length; i++) {
                    if (res.length > 0) res += ',';
                    res += values[i];
                }
                if (!isKeyFieldRequired) {
                    var resJson = [];
                    var path = `Home/GetSelectedRowData?ids=${res}&fieldName=${fieldName}`;
                    fetchJson(path, json => {
                        resJson = json;
                        res = '';
                        for (var i1 = 0; i1 < resJson.length; i1++) {
                            if (res.length > 0) res += ',';
                            res += resJson[i1];
                        }
                        console.log(resJson);
                        copyToClipboard(res);
                    });

                } else {

                    copyToClipboard(res);
                }
                //;
            }

            function copyToClipboard(str) {
                const el = document.createElement('textarea');
                el.value = str;
                document.body.appendChild(el);
                el.select();
                document.execCommand('copy');
                document.body.removeChild(el);
            }
        }
    }

</script>
<table>
    <tr>
        <td>
            <input id="filterStr" style="width:700px " />
        </td>
    </tr>
    <tr>
        <td>
            <table class="filter">
                <tr class="border_bottom">
                    <td>id</td>
                    <td><input type="checkbox" id="OrderIDCheckbox"></td>
                    <td>
                        <input class="inputBase greyBackground" id="OrderIDInput"
                               onkeydown="return OnlyNumberAndCommas(this, event)" style="width: 98%">
                    </td>
                </tr>
                <tr class="border_bottom">
                    <td>имя</td>
                    <td><input type="checkbox" id="ShipNameCheckbox"></td>
                    <td><input class="inputBase greyBackground" id="ShipNameInput" style="width: 98%"></td>
                </tr>
                <tr class="border_bottom">
                    <td>CustomerID</td>
                    <td><input type="checkbox" id="CustomerIDCheckbox"></td>
                    <td>
                        <select id="CustomerID_listbox" class="greyBackground inputBase" multiple
                                style="width: 99%">
                            <option>VINET</option>
                            <option>TOMSP</option>
                            <option>HANAR</option>
                            <option>VICTE</option>
                        </select>
                    </td>
                </tr>
                <tr class="border_bottom">
                    <td>цена</td>
                    <td><input type="checkbox" id="FreightCheckbox"></td>
                    <td>
                        <div>
                            от<input class="inputBase greyBackground" id="FreightInput"
                                     onkeydown="return OnlyNumberAndCommas(this, event)" type="number">до<input id="FreightInput2"
                                                                                                                type="number" class="inputBase greyBackground">
                        </div>
                    </td>
                </tr>
                <tr class="border_bottom">
                    <td>дата</td>
                    <td><input type="checkbox" id="OrderDateCheckbox"></td>
                    <td>
                        <div>
                            от<input class="inputBase greyBackground" id="OrderDateInput" type="date">до<input id="OrderDateInput2"
                                                                                                               class="inputBase greyBackground" type="date">
                        </div>
                    </td>
                </tr>
                <tr class="border_bottom">
                    <td  colspan="2">дата</td>
                  
                    <td>
                        <div>
                            <span style="display: inline">
                                от           <div style="display: inline">
                                    @Html.DevExpress().DateEdit(settings =>
                                    {
                                        settings.Name = "fromDateEdit";

                                    }).GetHtml() </div> до      @Html.DevExpress().DateEdit(settings =>
{
settings.Name = "toDateEdit";

}).GetHtml()
                            </span>
                        </div>
                    </td>
                </tr>
                <tr class="border_bottom">
                    <td>Проверка</td>
                    <td><input type="checkbox" id="IsCmokedCheckbox"></td>
                    <td><input class="inputBase greyBackground" id="IsCmokedInput" style="width: 98%"></td>
                </tr>
                <tr class="border_bottom">
                    <td colspan="3" bgcolor="#FBF0DB">
                <td colspan="3" bgcolor="#FBF0DB">
                    @Html.DevExpress().CheckBox(settings =>
                    {
                        settings.Name = "IsCmoked_CheckBox";
                        settings.Text = "проверка чек бокса";

                    }).GetHtml()
                </td>
                    
                </tr>
                <tr>
                    <td colspan="3" align="right">
                        <button onclick="ReadFilter()">ReadFilter</button>
                        <button onclick="SaveFilter()">SaveFilter</button>

                        <button onclick="FilterFind()"
                                id="findButton">
                            Найти
                        </button>
                    </td>
                </tr>
            </table>

        </td>
    </tr>
    <tr>

        <td>
            @Html.Action("GridViewPartial")
        </td>
    </tr>

</table>
<script type="text/javascript">

    var filterDiscr = [
        { dataField: "OrderID", caption: 'id', dataType: "number", filterType: "", filter: true },
        { dataField: "ShipName", caption: 'имя', dataType: "string", filterType: "", filter: true },
        {
            dataField: "CustomerID",
            caption: 'CustomerID',
            dataType: "string",
            filterType: "listbox",
            filter: true,
            avaiableValues: ["VINET", "TOMSP", "HANAR", "VICTE"]
        },
        { dataField: "Freight", caption: 'цена', dataType: "number", filterType: "between", filter: true },
        { dataField: "OrderDate", caption: 'дата', dataType: "date", filterType: "between", filter: true }//,
        // { dataField: "IsCmoked", caption: 'Проверка', dataType: "boolean",  filter: true }
    ];

    // document.onload(() => {
    var filerElem = document.getElementById("filter");
    var filter = new FilterElements(GridView, filerElem);
    //  filter.CreateFilter(filterDiscr);
    //filter.SetOuterFilter(filterDiscr);
    filter.AddDevexpressDate(fromDateEdit, toDateEdit, "OrderDate");
   // filter.AddDevexpressCheckBox(IsCmoked_CheckBox,"IsCmoked");

    function FilterFind() {
        filter.FilterFind();
    }
    function ReadFilter() {
        var value=   IsCmoked_CheckBox.GetCheckState()==="Checked";
        alert(value);
        IsCmoked_CheckBox.SetCheckState("Checked");
        filter.ReadSettings("SettingName");
    }

    function SaveFilter() {
        filter.SaveSettings("SettingName");
    }

</script>